/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/auth/register": {
    post: {
      requestBody: {
        content: {
          "application/json": {
            email: string;
            password: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/auth/login": {
    post: {
      requestBody: {
        content: {
          "application/json": {
            email: string;
            password: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        202: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              error: string;
            };
          };
        };
      };
    };
  };
  "/auth/logout": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          content: {
            "application/json": {
              error: string;
            };
          };
        };
      };
    };
  };
  "/batches/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/batches/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/cash-registers/": {
    get: {
      parameters: {
        query?: {
          limit?: number;
          offset?: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            name: string;
            initialBalance: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/cash-registers/{id}": {
    get: {
      parameters: {
        path: {
          cashRegisterId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          cashRegisterId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            name?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/company-members/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    post: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/company-members/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/companies/": {
    get: {
      parameters: {
        query: {
          limit: number;
          offset: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
                id: number;
                name: string;
                nip: string;
                address: {
                  id: number;
                  city: string;
                  street: string;
                  zipCode: string;
                  building: string;
                  local: string;
                  country: string;
                  state: string;
                };
              }[];
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            name: string;
            nip: string;
            address: {
              city: string;
              street: string;
              zipCode: string;
              building: string;
              local: string;
              country: string;
              state: string;
            };
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              companyId: number;
            };
          };
        };
      };
    };
  };
  "/companies/{id}": {
    get: {
      parameters: {
        path: {
          companyId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              id: number;
              name: string;
              nip: string;
              address: {
                id: number;
                city: string;
                street: string;
                zipCode: string;
                building: string;
                local: string;
                country: string;
                state: string;
              };
            };
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          companyId: number;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            name: string;
            nip: string;
            address: {
              city: string;
              street: string;
              zipCode: string;
              building: string;
              local: string;
              country: string;
              state: string;
            };
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/deliveries/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    post: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/deliveries/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/department-members/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    post: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/department-members/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/departments/": {
    get: {
      parameters: {
        query: {
          limit: number;
          offset: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
                id: number;
                name: string;
                address: {
                  id: number;
                  city: string;
                  street: string;
                  zipCode: string;
                  building: string;
                  local: string;
                  country: string;
                  state: string;
                };
              }[];
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            companyId: number;
            name: string;
            address: {
              city: string;
              street: string;
              zipCode: string;
              building: string;
              local: string;
              country: string;
              state: string;
            };
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              departmentId: number;
            };
          };
        };
      };
    };
  };
  "/departments/{id}": {
    get: {
      parameters: {
        path: {
          departmentId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              id: number;
              name: string;
              address: {
                id: number;
                city: string;
                street: string;
                zipCode: string;
                building: string;
                local: string;
                country: string;
                state: string;
              };
            };
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          departmentId: number;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            companyId: number;
            name: string;
            address: {
              city: string;
              street: string;
              zipCode: string;
              building: string;
              local: string;
              country: string;
              state: string;
            };
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
      };
    };
  };
  "/document-skus/": {
    get: {
      parameters: {
        query?: {
          limit?: number;
          offset?: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
                id: number;
                documentId: number;
                sku: {
                  id: number;
                  name: string;
                };
              }[];
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            documentId: number;
            skuId: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              documentSkuId: number;
            };
          };
        };
      };
    };
  };
  "/document-skus/{documentSkuId}": {
    delete: {
      parameters: {
        path: {
          documentSkuId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          documentSkuId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            documentId?: number;
            skuId?: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
      };
    };
  };
  "/documents/": {
    get: {
      parameters: {
        query: {
          limit: number;
          offset: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": ({
                id: number;
                type: "INBOUND" | "OUTBOUND" | "INBOUND_CORRECTION" | "OUTBOUND_CORRECTION";
                status: "PENDING" | "ENTERED" | "ACCEPTED" | "CANCELED" | "CORRECTED";
                createdAt: unknown;
              })[];
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            type: "INBOUND" | "OUTBOUND" | "INBOUND_CORRECTION" | "OUTBOUND_CORRECTION";
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              documentId: number;
            };
          };
        };
      };
    };
  };
  "/documents/{documentId}": {
    get: {
      parameters: {
        path: {
          documentId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              id: number;
              type: "INBOUND" | "OUTBOUND" | "INBOUND_CORRECTION" | "OUTBOUND_CORRECTION";
              status: "PENDING" | "ENTERED" | "ACCEPTED" | "CANCELED" | "CORRECTED";
              createdAt: unknown;
            };
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          documentId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            payerId?: number;
            purchaserId?: number;
            receiverId?: number;
            supplierId?: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
      };
    };
  };
  "/documents/{documentId}/enter": {
    patch: {
      parameters: {
        path: {
          documentId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @default success */
              status: string;
            };
          };
        };
      };
    };
  };
  "/documents/{documentId}/accept": {
    patch: {
      parameters: {
        path: {
          documentId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @default success */
              status: string;
            };
          };
        };
      };
    };
  };
  "/documents/{documentId}/cancel": {
    patch: {
      parameters: {
        path: {
          documentId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
      };
    };
  };
  "/document-batches/": {
    get: {
      parameters: {
        query?: {
          limit?: number;
          offset?: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              status: string;
              data: {
                documentBatches: ({
                    documentId: number;
                    documentSkuId: number;
                    id: number;
                    type: "INBOUND" | "OUTBOUND" | "INBOUND_CORRECTION" | "OUTBOUND_CORRECTION" | "OUTBOUND_FROM_ORDER_PICKING";
                    quantity: string;
                    netPrice: string;
                    discountPercentage: string;
                    grossPrice: string;
                    netDiscountedPrice: string;
                    grossDiscountedPrice: string;
                    netValue: string;
                    grossValue: string;
                    netDiscountedValue: string;
                    grossDiscountedValue: string;
                    taxValue: string;
                    tax: {
                      id: number;
                      percentage: string;
                      name: string;
                    };
                  })[];
              };
            };
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            documentId: number;
            batchId?: number;
            documentSkuId: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              documentBatchId: number;
            };
          };
        };
      };
    };
  };
  "/document-batches/{documentBatchId}": {
    delete: {
      parameters: {
        path: {
          documentBatchId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          documentBatchId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            quantity?: number;
            netPrice?: number;
            discountPercentage?: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @default success */
              status: string;
            };
          };
        };
      };
    };
  };
  "/document-taxes/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/employees/": {
    get: {
      parameters: {
        query: {
          limit: number;
          offset: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": ({
                id: number;
                start: unknown;
                end: unknown;
                userId: number;
                role: "WAREHOUSEMAN" | "WAREHOUSE_MANAGER" | "BOSS";
                isActive: boolean;
              })[];
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            start: string;
            end: string;
            userId: number;
            role: "WAREHOUSEMAN" | "WAREHOUSE_MANAGER" | "BOSS";
            isActive: boolean;
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              employeeId: number;
            };
          };
        };
      };
    };
  };
  "/employees/{employeeId}": {
    get: {
      parameters: {
        path: {
          employeeId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              id: number;
              start: unknown;
              end: unknown;
              userId: number;
              role: "WAREHOUSEMAN" | "WAREHOUSE_MANAGER" | "BOSS";
              isActive: boolean;
            };
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          employeeId: number;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            start: string;
            end: string;
            userId: number;
            role: "WAREHOUSEMAN" | "WAREHOUSE_MANAGER" | "BOSS";
            isActive: boolean;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/invoices/": {
    get: {
      parameters: {
        query?: {
          limit?: number;
          offset?: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            type: "SALES" | "PURCHASE" | "SALES_CORRECTION" | "PURCHASE_CORRECTION";
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/invoices/{id}": {
    get: {
      parameters: {
        path: {
          invoiceId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          invoiceId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/invoices/{id}/enter": {
    patch: {
      parameters: {
        path: {
          invoiceId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/invoices/{id}/accept": {
    patch: {
      parameters: {
        path: {
          invoiceId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/invoices/{id}/correct": {
    patch: {
      parameters: {
        path: {
          invoiceId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/invoice-skus/": {
    get: {
      parameters: {
        query: {
          limit: number;
          offset: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": unknown[];
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            invoiceId: number;
            skuId: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              invoiceSkuId: number;
            };
          };
        };
      };
    };
  };
  "/invoice-skus/{id}": {
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/invoice-batches/": {
    get: {
      parameters: {
        query: {
          limit: number;
          offset: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": unknown[];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          invoiceBatchId: number;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            invoiceId: number;
            invoiceSkuId: number;
            batchId?: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/invoice-batches/{id}": {
    delete: {
      parameters: {
        path: {
          invoiceBatchId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          invoiceBatchId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/invoice-taxes/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/orders/": {
    get: {
      parameters: {
        query?: {
          limit?: number;
          offset?: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": ({
                id: number;
                ordererId: number;
                type: "INBOUND" | "OUTBOUND";
                status: string;
                createdAt: unknown;
                updatedAt: unknown;
              })[];
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            type: "INBOUND" | "OUTBOUND";
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              orderId: number;
            };
          };
        };
      };
    };
  };
  "/orders/{id}": {
    get: {
      parameters: {
        path: {
          orderId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              id: number;
              ordererId: number;
              type: "INBOUND" | "OUTBOUND";
              status: string;
              createdAt: unknown;
              updatedAt: unknown;
            };
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          orderId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/orders/{id}/accept": {
    patch: {
      parameters: {
        path: {
          orderId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/orders/{id}/enter": {
    patch: {
      parameters: {
        path: {
          orderId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/orders/{id}/start-picking": {
    patch: {
      parameters: {
        path: {
          orderId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/order-skus/": {
    get: {
      parameters: {
        query?: {
          limit?: number;
          offset?: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            orderId: number;
            skuId: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/order-skus/{id}": {
    delete: {
      parameters: {
        path: {
          orderSkuId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          orderSkuId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            quantityOrdered?: number;
            quantityBackordered?: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/order-batches/": {
    get: {
      parameters: {
        query?: {
          limit?: number;
          offset?: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            orderId: number;
            orderSkuId: number;
            batchId: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/order-batches/{id}": {
    patch: {
      parameters: {
        path: {
          orderBatchId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            quantityOrdered?: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/order-taxes/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/payments/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    post: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/payments/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/pricelists/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    post: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/pricelists/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/pricelist-skus/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    post: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/pricelist-skus/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/pricelist-batches/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    post: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/pricelist-batches/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/product-categories/": {
    get: {
      parameters: {
        query?: {
          limit?: number;
          offset?: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            name: string;
            description: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/product-categories/{id}": {
    get: {
      parameters: {
        path: {
          productCategoryId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          productCategoryId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            name?: string;
            description?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/promotions/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    post: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/promotions/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/promotion-skus/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    post: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/promotion-skus/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/promotion-batches/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    post: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/promotion-batches/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/settlements/": {
    get: {
      parameters: {
        query?: {
          limit?: number;
          offset?: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
                id: number;
                title: string;
                description: string;
                fromEntityId: number;
                toEntityId: number;
                amount: string;
                amountUnsettled: string;
                paymentDate: unknown;
              }[];
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            amount: number;
            description: string;
            fromEntityId: number;
            title: string;
            toEntityId: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              settlementId: number;
            };
          };
        };
      };
    };
  };
  "/settlements/{id}": {
    get: {
      parameters: {
        path: {
          settlementId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              id: number;
              title: string;
              description: string;
              fromEntityId: number;
              toEntityId: number;
              amount: string;
              amountUnsettled: string;
              paymentDate: unknown;
            };
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          settlementId: number;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            amount: number;
            description: string;
            fromEntityId: number;
            title: string;
            toEntityId: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
      };
    };
  };
  "/skus/": {
    get: {
      parameters: {
        query?: {
          limit?: number;
          offset?: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
                id: number;
                name: string;
                description: string;
                productCategoryId: number;
              }[];
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            name: string;
            description: string;
            productCategoryId: number;
            purchaseTaxId: number;
            salesTaxId: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              skuId: number;
            };
          };
        };
      };
    };
  };
  "/skus/{id}": {
    get: {
      parameters: {
        path: {
          skuId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          skuId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            name?: string;
            description?: string;
            productCategoryId?: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
      };
    };
  };
  "/taxes/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
                id: number;
                name: string;
                percentage: string;
              }[];
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            name: string;
            percentage: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              taxId: number;
            };
          };
        };
      };
    };
  };
  "/warehouses/{id}": {
    get: {
      parameters: {
        path: {
          warehouseId: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              id: number;
              name: string;
              addressId: number;
            };
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          warehouseId: number;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            name: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
      };
    };
  };
  "/warehouses/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
                id: number;
                name: string;
                address: {
                  id: number;
                  country: string;
                  state: string;
                  city: string;
                  street: string;
                  building: string;
                  local: string;
                  zipCode: string;
                };
              }[];
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            name: string;
            address: {
              country: string;
              state: string;
              city: string;
              street: string;
              building: string;
              local: string;
              zipCode: string;
            };
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              warehouseId: number;
            };
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
